export interface CompanyDto {
  id?: string; // generated by backend
  companyName: string;
  email: string;
  password: string;
  role: "COMPANY";
  phone?: string;
  linkedinUrl?: string;
  instagram?: string;
  websiteUrl?: string;
  foundedAt?: string; // ISO date string
  employeeCount?: string;
  headQuarter?: string;
  branches?: string[];
  industries?: string[];
  organizationType?: string;
  workEnvironment?: string;
  logoUrl?: string;
  description?: string;
  techStack?: string[];
  contactName?: string;
  contactEmail?: string;
  contactPhone?: string;
  contactJobTitle?: string;
  images?: string[];
  teamSize?: string;
  team?: {
    profilePic?: string;
    name: string;
    position: string;
    socialLinks?: string[];
  }[];
  // relations skipped for DTO (jobs, dashboard, notifications, etc.)
  createdAt?: string;
  updatedAt?: string;
}

export interface TalentDto {
  id?: string; // generated by backend
  fullName: string;
  email: string;
  password: string;
  role: "TALENT";
  phoneNumber?: string;
  birthday? : Date;
  languages?: string[];
  linkedinUrl?: string;
  personalWebsite?: string;
  instagramUrl?: string;
  locations?: string;
  fieldOfStudy?: string;
  program?: string;
  workingEnvironment?: string; // e.g. Remote, Hybrid, Onsite
  bio?: string;
  preferredRole?: string;
  aboutMe?: string;
  experiences?: {
    title: string;
    company: string;
    env?: string; // environment (Remote/Onsite)
    period: string;
    location?: string;
    desc?: string;
  }[];
  education?: {
    institution: string;
    program: string;
    field: string;
    year?: string;
    desc?: string;
  }[];
  skills?: string[];
  gender?: "MALE" | "FEMALE" | "OTHER"; // match your Gender enum
  profileImageUrl?: string;
  backgroundImageUrl?: string;
  rating?: number;
  address?: string;
  yearsExperience?: number;
  resumeUrl?: string;
  availableForWork?: boolean;
  settings?: Record<string, object>;
  // relations skipped for DTO (applications, dashboard, etc.)
  createdAt?: string;
  updatedAt?: string;
}


export interface companyQueryParams {
  page: number;
  limit: number;
  search?: string;
  location?: string;
  industries?: string[];
  teamSize?: string[];
  sortBy: "companyName" | "employeeCount" | "createdAt";
  sortOrder: "asc" | "desc";
}